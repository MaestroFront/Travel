let selfCheck = () => {

    const carousel = 'На десктоп варианте при клике на урезанную картинку слева или справа изображение меняется по принципу карусели (например если нажать правую картинку та что была в центре на уезжает налево, а та что была видна наполовину оказывается справа). Слайдер может быть как конечным так и бесконечным - данный критерий не должен влиять на оценку';
    const dots = 'Три точки внизу отображают "номер слайда", то есть каждому слайду соответствует свой кружочек, который становится активным при нахождении соответствующего ему слайда в центре. На мобильном варианте картинка одна, но поверх нее появляются стрелочки навигации (можно сделать как карусель или же затемнять кнопку если слайдер достиг края)';
    const animation = 'Анимации плавного перемещения для слайдера';
    const popup = 'Логин попап соответствует верстке его закрытие происходит при клике вне попапа';
    const alert = 'Логин попап имеет 2 инпута (логин и пароль) при нажатии на кнопку Sign In показывается браузерный алерт с введенными данными (для реализации можно использовать тег )';
    const registerBtn = 'Нажатие на кнопку Register на Login попапе меняет разметку попапа на разметку Sign Up попапа согласно макету (То есть нажатие не закрывает модал а просто меняет его наполнение)';


    const requirements = [carousel, dots, animation, popup, alert, registerBtn];

    const myPoints = [20, 20, 10, 25, 25, 25];

    const separator = ' - ';

    let sum = 0;

    for (let i = 0; i < myPoints.length; i++) {
        sum += myPoints[i];
    }

    for (let i = 0; i < requirements.length; i++) {

        console.log(`${i+1}.${requirements[i]}${separator}${myPoints[i]} балла(ов)`);

    }

    console.log(`Итого: ${sum} балла(ов)`)

};

selfCheck();